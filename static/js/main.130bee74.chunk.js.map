{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","maxTime","timeLeft","timeInput","paused","setTime","bind","reset","stop","resume","this","setState","clearInterval","timerID","time","setInterval","count","hours","Math","floor","minutes","seconds","String","length","className","styleTime","onClick","type","placeholder","value","onChange","e","target","max","href","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAoGeA,G,wDA/Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,SAAU,GACVC,UAAW,EACXC,QAAQ,GAGV,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,KAAO,EAAKA,KAAKF,KAAV,gBACZ,EAAKG,OAAS,EAAKA,OAAOH,KAAZ,gBAZG,E,gEAgBjBI,KAAKL,QAAQ,IACbK,KAAKD,W,8BAILC,KAAKC,SAAS,CAACT,SAAUQ,KAAKV,MAAME,SAAW,IAC3CQ,KAAKV,MAAME,UAAY,IACzBQ,KAAKC,SAAS,CAACT,SAAU,IACzBQ,KAAKF,U,6BAKPI,cAAcF,KAAKG,SACnBH,KAAKG,QAAU,KACfH,KAAKC,SAAS,CAACP,QAAQ,M,8BAGjBU,GACNJ,KAAKC,SAAS,CAACV,QAASa,EAAMZ,SAAUY,IACxCJ,KAAKF,S,+BAGG,IAAD,OACHE,KAAKG,UACTH,KAAKG,QAAUE,aAAY,kBAAM,EAAKC,UAAS,KAC/CN,KAAKC,SAAS,CAACP,QAAQ,O,8BAIvBM,KAAKC,SAAS,CAACT,SAAUQ,KAAKV,MAAMC,UACpCS,KAAKF,S,gCAGGM,GACR,IAAIG,EAAQC,KAAKC,MAAML,EAAO,MAC1BM,EAAUF,KAAKC,MAAOL,EAAO,KAAQ,IACrCO,EAAUP,EAAO,GAErB,OAAIA,EAAO,GACH,GAAN,OAAUO,GACDP,EAAO,MACe,IAA3BQ,OAAOD,GAASE,SAAcF,EAAO,WAAOC,OAAOD,KACjD,GAAN,OAAUD,EAAV,YAAqBC,KAEU,IAA3BC,OAAOF,GAASG,SAAcH,EAAO,WAAOE,OAAOF,KACxB,IAA3BE,OAAOD,GAASE,SAAcF,EAAO,WAAOC,OAAOD,KACjD,GAAN,OAAUJ,EAAV,YAAmBG,EAAnB,YAA8BC,M,+BAIxB,IAAD,OACP,OACE,sBAAKG,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAf,SAA+Bd,KAAKe,UAAUf,KAAKV,MAAME,YACzD,sBAAKsB,UAAU,cAAf,UACE,sBAAKA,UAAU,iBAAf,UAEId,KAAKV,MAAMI,OACT,wBAAQoB,UAAU,mBAAmBE,QAAShB,KAAKD,OAAnD,mBACD,wBAAQe,UAAU,kBAAkBE,QAAShB,KAAKF,KAAlD,kBAEH,wBAAQgB,UAAU,mBAAmBE,QAAShB,KAAKH,MAAnD,sBAEF,sBAAKiB,UAAU,WAAf,UACE,uBAAOG,KAAK,SAASC,YAAY,kBAAkBC,MAAOnB,KAAKV,MAAMG,UAAW2B,SAAU,SAAAC,GAAC,OAAI,EAAKpB,SAAS,CAACR,UAAW4B,EAAEC,OAAOH,SAASI,IAAI,UAC/I,wBAAQT,UAAU,sBAAsBE,QAAS,kBAAM,EAAKrB,QAAQ,EAAKL,MAAMG,YAA/E,0BAIN,sBAAKqB,UAAU,SAAf,qBACU,mBAAGU,KAAK,gCAAR,2BADV,UAC2E,mBAAGA,KAAK,sBAAR,+B,GAzFjEC,IAAMC,YCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.130bee74.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxTime: 10,\n      timeLeft: 10,\n      timeInput: 0,\n      paused: false\n    };\n\n    this.setTime = this.setTime.bind(this);\n    this.reset = this.reset.bind(this);\n    this.stop = this.stop.bind(this);\n    this.resume = this.resume.bind(this);\n  }\n\n  componentDidMount() {\n    this.setTime(10);\n    this.resume();\n  }\n\n  count() {\n    this.setState({timeLeft: this.state.timeLeft - 1});\n    if (this.state.timeLeft <= 0) {\n      this.setState({timeLeft: 0});\n      this.stop();\n    }\n  }\n\n  stop() {\n    clearInterval(this.timerID);\n    this.timerID = null;\n    this.setState({paused: true});\n  }\n\n  setTime(time) {\n    this.setState({maxTime: time, timeLeft: time});\n    this.stop();\n  }\n\n  resume() {\n    if (this.timerID) return\n    this.timerID = setInterval(() => this.count(), 1000);\n    this.setState({paused: false});\n  }\n\n  reset() {\n    this.setState({timeLeft: this.state.maxTime});\n    this.stop();\n  }\n\n  styleTime(time) {\n    var hours = Math.floor(time / 3600);\n    var minutes = Math.floor((time % 3600) / 60);\n    var seconds = time % 60;\n\n    if (time < 60) {\n      return `${seconds}`;\n    } else if (time < 3600) {\n      if (String(seconds).length === 1) seconds = `0${String(seconds)}`;\n      return `${minutes}:${seconds}`;\n    } else {\n      if (String(minutes).length === 1) minutes = `0${String(minutes)}`;\n      if (String(seconds).length === 1) seconds = `0${String(seconds)}`;\n      return `${hours}:${minutes}:${seconds}`;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"timer\">\n          <div className=\"timer-screen\">{this.styleTime(this.state.timeLeft)}</div>\n          <div className=\"option-dock\">\n            <div className=\"button-section\">\n              {\n                this.state.paused\n                ? <button className=\"option-btn start\" onClick={this.resume}>Start</button>\n                :<button className=\"option-btn stop\" onClick={this.stop}>Stop</button>\n              }\n              <button className=\"option-btn Reset\" onClick={this.reset}>Reset</button>\n            </div>\n            <div className=\"set-time\">\n              <input type=\"number\" placeholder=\"Set Timer Value\" value={this.state.timeInput} onChange={e => this.setState({timeInput: e.target.value})} max=\"86400\" />\n              <button className=\"option-btn set-time\" onClick={() => this.setTime(this.state.timeInput)}>Set</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\">\n          Made by <a href=\"https://github.com/Nemesis-AS\">Nemesis&trade;</a> using <a href=\"https://reactjs.org\">ReactJS</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}